version: "3.1"
services:
  # grafana:
  #   container_name: grafana
  #   image: grafana/grafana
  #   restart: always
  #   ports:
  #     - "3000:3000"
  #   stdin_open: true
  #   tty: true
  #   depends_on:
  #     influxdb:
  #       condition: service_started
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #   networks:
  #     - app-network

  influxdb:
    container_name: influxdb
    image: influxdb:1.8
    restart: always
    ports:
      - "8086:8086"
      - "2003:2003"
    stdin_open: true
    tty: true
    volumes:
      - influxdb-data:/var/lib/influxdb
    env_file:
      - "env.influxdb"
    command: >
      sh -c "
        apt-get update &&
        apt install -y openssh-server &&
        echo 'PasswordAuthentication yes >> /etc/ssh/sshd_config && 
        service ssh start &&
        usermod --password $$(echo $${INFLUXDB_CONTAINER_PASSWORD} | openssl passwd -1 -stdin) $${INFLUXDB_CONTAINER_USER} &&
        influxd"
    networks:
      - app-network

  # disk_usage_cronjob:
  #   container_name: disk_usage_cronjob
  #   restart: always
  #   env_file:
  #     - "./disk_usage_cronjob/.env.example"
  #   build:
  #     context: disk_usage_cronjob
  #   depends_on:
  #     influxdb:
  #       condition: service_started
  #   # Waits for influxdb container to start to copy ssh key to the authorized_keys
  #   # StrictHostKeyChecking will automatically add the host key to your known_hosts file if it's not already there.
  #   command: >
  #     sh -c "
  #       /wait-for-it.sh influxdb:8086 -- sshpass -p $${INFLUXDB_CONTAINER_PASSWORD} ssh-copy-id -i /root/.ssh/id_rsa.pub -o StrictHostKeyChecking=no $${INFLUXDB_CONTAINER_USER}@$${INFLUXDB_CONTAINER_HOST} &&
  #       python main.py"
  #   stop_signal: SIGINT
  #   stdin_open: true
  #   tty: true
  #   networks:
  #     - app-network
volumes:
  grafana-data:
  influxdb-data:
networks:
  app-network:
    driver: bridge
